{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Contact.js","components/Skill.js","components/Project.js","firebase.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","closeNavbar","document","getElementById","classList","contains","remove","toggle","className","id","onClick","animateScroll","scrollToTop","duration","smooth","scroller","scrollTo","offset","Home","homeTitle","homeBody","image","href","title","target","rel","src","alt","Contact","quote","version","xmlns","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","Skill","Icon","data-aos","data-aos-offset","Project","key","language","link","details","css","useState","classes","setClasses","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","Projects","projectBody","languages","setLanguages","projects","setProjects","useEffect","a","languagesRef","collection","get","snapshot","empty","console","log","forEach","doc","data","hide","push","name","order","url","sort","b","projectsRef","fetchLanguages","fetchProjects","AndroidIcon","WebIcon","DesktopMacIcon","map","project","Footer","resume","achievements","setAchievements","fetchAchievements","achievement","App","info","setInfo","fetchInformation","aos","init","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ab02a15.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport { animateScroll, scroller } from 'react-scroll';\r\n\r\nfunction Navbar() {\r\n   const toggleNavbar = () => {\r\n      document.getElementById('navbar-links').classList.toggle('navbar-active');\r\n      document.getElementById('hamburger').classList.toggle('toggle');\r\n   };\r\n\r\n   const closeNavbar = () => {\r\n      if (\r\n         document\r\n            .getElementById('navbar-links')\r\n            .classList.contains('navbar-active')\r\n      ) {\r\n         document\r\n            .getElementById('navbar-links')\r\n            .classList.remove('navbar-active');\r\n         document.getElementById('hamburger').classList.toggle('toggle');\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"navbar-container\">\r\n         <div className=\"navbar\">\r\n            <div className=\"navbar-logo\"></div>\r\n            <div id=\"hamburger\" className=\"hamburger\" onClick={toggleNavbar}>\r\n               <div className=\"line1\"></div>\r\n               <div className=\"line2\"></div>\r\n               <div className=\"line3\"></div>\r\n            </div>\r\n            <ul id=\"navbar-links\" className=\"navbar-links\">\r\n               <li\r\n                  id=\"home-link\"\r\n                  onClick={() => {\r\n                     animateScroll.scrollToTop({\r\n                        duration: 1500,\r\n                        smooth: true,\r\n                     });\r\n                     closeNavbar();\r\n                  }}>\r\n                  Home\r\n               </li>\r\n               <li\r\n                  id=\"projects-link\"\r\n                  onClick={() => {\r\n                     scroller.scrollTo('projects', {\r\n                        duration: 1500,\r\n                        smooth: true,\r\n                        offset: -100,\r\n                     });\r\n                     closeNavbar();\r\n                  }}>\r\n                  Projects\r\n               </li>\r\n               <li\r\n                  id=\"contact-link\"\r\n                  onClick={() => {\r\n                     scroller.scrollTo('contact', {\r\n                        duration: 1500,\r\n                        smooth: true,\r\n                     });\r\n                     closeNavbar();\r\n                  }}>\r\n                  Contact\r\n               </li>\r\n            </ul>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nfunction Home({ homeTitle, homeBody, image }) {\r\n   return (\r\n      <div id=\"home\" className=\"home-container section\">\r\n         <div className=\"home\">\r\n            <div className=\"home-left\">\r\n               <div className=\"home-left-name\">\r\n                  <div className=\"home-left-first-name\">adnan</div>\r\n                  <div className=\"home-left-last-name\">hakim.</div>\r\n                  <div className=\"home-left-line\"></div>\r\n               </div>\r\n               <div className=\"home-left-links\">\r\n                  <a\r\n                     href=\"https://www.instagram.com/ad.nxn/\"\r\n                     title=\"Follow me on Instagram\"\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\">\r\n                     <InstagramIcon className=\"home-left-link\" />\r\n                  </a>\r\n                  <a\r\n                     href=\"https://github.com/adnanhakim\"\r\n                     title=\"See my projects on GitHub\"\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\">\r\n                     <GitHubIcon className=\"home-left-link\" />\r\n                  </a>\r\n                  <a\r\n                     href=\"https://www.linkedin.com/in/adnanhakim/\"\r\n                     title=\"Follow me on LinkedIn\"\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\">\r\n                     <LinkedInIcon className=\"home-left-link\" />\r\n                  </a>\r\n               </div>\r\n               <img src={image} alt=\"\" />\r\n            </div>\r\n            <div className=\"home-right\">\r\n               <div className=\"header\">- introduction</div>\r\n               <div className=\"title\">{homeTitle}</div>\r\n               <div className=\"body\">{homeBody}</div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Contact.css';\r\n\r\nfunction Contact({ quote }) {\r\n   return (\r\n      <div className=\"contact-container\">\r\n         <div className=\"contact\">\r\n            <div className=\"contact-left\">\r\n               <div className=\"header\">- Contact</div>\r\n               <div className=\"title\">any type of query and discussion.</div>\r\n               <div className=\"button\">\r\n                  <a href=\"mailto:adnanhakim007@gmail.com\">send an email.</a>\r\n               </div>\r\n            </div>\r\n            <div className=\"contact-right\">\r\n               <svg\r\n                  version=\"1.0\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"100px\"\r\n                  height=\"70px\"\r\n                  viewBox=\"0 0 860.000000 587.000000\"\r\n                  preserveAspectRatio=\"xMidYMid meet\">\r\n                  <g\r\n                     transform=\"translate(0.000000,587.000000) scale(0.100000,-0.100000)\"\r\n                     fill=\"#333647\"\r\n                     stroke=\"none\">\r\n                     <path\r\n                        d=\"M3895 5464 c-11 -2 -81 -10 -155 -19 -1665 -199 -2828 -1014 -3266\r\n                        -2290 -107 -310 -174 -673 -174 -945 -1 -744 447 -1413 1130 -1691 493 -200\r\n                        1028 -180 1502 56 285 142 536 367 711 636 393 605 388 1398 -12 1994 -275\r\n                        409 -703 690 -1191 782 -183 34 -497 28 -679 -13 -35 -8 -66 -13 -68 -10 -2 2\r\n                        24 39 59 82 334 421 933 764 1663 955 146 37 353 81 465 97 l55 7 0 179 c0\r\n                        112 -4 180 -10 181 -5 1 -19 1 -30 -1z\"\r\n                     />\r\n                     <path\r\n                        d=\"M8200 5459 c-645 -76 -1207 -228 -1675 -453 -921 -442 -1542 -1192\r\n                        -1775 -2146 -113 -466 -112 -867 5 -1228 46 -139 157 -362 242 -482 88 -124\r\n                        310 -346 433 -432 421 -297 948 -403 1449 -292 654 146 1182 650 1356 1297\r\n                        128 473 58 990 -190 1402 -285 473 -756 788 -1300 870 -183 27 -458 17 -639\r\n                        -24 -27 -7 -50 -10 -52 -8 -8 8 143 182 242 277 342 330 858 596 1474 759 136\r\n                        36 381 87 468 97 l62 7 0 183 c0 141 -3 184 -12 183 -7 -1 -47 -6 -88 -10z\"\r\n                     />\r\n                  </g>\r\n               </svg>\r\n               <span className=\"title\">{quote}</span>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './Skill.css';\r\n\r\nfunction Skill({ Icon, title }) {\r\n   return (\r\n      <div\r\n         data-aos=\"zoom-out\"\r\n         data-aos-offset=\"200\"\r\n         className=\"skill-container\">\r\n         <div className=\"skill-padding\">\r\n            <Icon className=\"skill-icon\" />\r\n            {title}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Skill;\r\n","import React, { useState } from 'react';\r\nimport './Project.css';\r\n\r\nfunction Project({ key, title, language, image, link, details, css }) {\r\n   const [classes, setClasses] = useState('project-back');\r\n\r\n   const toggle = () => {\r\n      if (classes === 'project-back') {\r\n         setClasses('project-back view-details');\r\n      } else setClasses('project-back');\r\n   };\r\n\r\n   return (\r\n      <div data-aos=\"zoom-in\" onClick={toggle} className=\"project-container\">\r\n         <div className=\"project-front\">\r\n            <div className=\"project-info\">\r\n               <div className=\"project-title\">{title}.</div>\r\n               <div className=\"project-language\">{language}.</div>\r\n            </div>\r\n            <a\r\n               href={link}\r\n               title=\"View Project\"\r\n               target=\"_blank\"\r\n               rel=\"noopener noreferrer\">\r\n               <div className=\"project-button\">visit.</div>\r\n            </a>\r\n         </div>\r\n         <img src={image} alt=\"\" className={css} />\r\n         <div className={classes}>\r\n            <div className=\"project-body\">{details}</div>\r\n            <a\r\n               href={link}\r\n               title=\"View Project\"\r\n               target=\"_blank\"\r\n               rel=\"noopener noreferrer\">\r\n               <div className=\"project-button\">visit.</div>\r\n            </a>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Project;\r\n","import firebase from 'firebase';\r\n\r\nconst app = firebase.initializeApp({\r\n   apiKey: process.env.REACT_APP_API_KEY,\r\n   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n   databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n   projectId: process.env.REACT_APP_PROJECT_ID,\r\n   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n   appId: process.env.REACT_APP_APP_ID,\r\n   measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n});\r\n\r\nconst db = app.firestore();\r\nconst storage = app.storage();\r\n\r\nexport { db, storage };\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Projects.css';\r\nimport Skill from './Skill';\r\nimport Project from './Project';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport { Element } from 'react-scroll';\r\nimport { db } from '../firebase';\r\n\r\nfunction Projects({ projectBody }) {\r\n   const [languages, setLanguages] = useState([]);\r\n   const [projects, setProjects] = useState([]);\r\n\r\n   useEffect(() => {\r\n      async function fetchLanguages() {\r\n         // Reference\r\n         const languagesRef = db.collection('languages');\r\n         const snapshot = await languagesRef.get();\r\n\r\n         if (snapshot.empty) {\r\n            console.log('No languages');\r\n         } else {\r\n            let languages = [];\r\n\r\n            // Store in array\r\n            snapshot.forEach((doc) => {\r\n               const data = doc.data();\r\n               if (data.hide == null) {\r\n                  languages.push({\r\n                     key: doc.id,\r\n                     name: data.name,\r\n                     order: data.order,\r\n                     url: data.url,\r\n                  });\r\n               }\r\n            });\r\n\r\n            // Sort by order\r\n            languages.sort((a, b) => a.order - b.order);\r\n            setLanguages(languages);\r\n         }\r\n      }\r\n\r\n      fetchLanguages();\r\n\r\n      async function fetchProjects() {\r\n         // Reference\r\n         const projectsRef = db.collection('projects');\r\n         const snapshot = await projectsRef.get();\r\n\r\n         if (snapshot.empty) {\r\n            console.log('No projects');\r\n         } else {\r\n            let projects = [];\r\n\r\n            // Store in array\r\n            snapshot.forEach((doc) => {\r\n               const data = doc.data();\r\n               if (data.hide == null) {\r\n                  projects.push({\r\n                     key: doc.id,\r\n                     title: data.title,\r\n                     details: data.details,\r\n                     order: data.order,\r\n                     link: data.link,\r\n                     language: data.language,\r\n                     url: data.url,\r\n                     css: data.css,\r\n                  });\r\n               }\r\n            });\r\n\r\n            // Sort by order\r\n            projects.sort((a, b) => a.order - b.order);\r\n            setProjects(projects);\r\n         }\r\n      }\r\n\r\n      fetchProjects();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"projects-container\">\r\n         <div className=\"skills\">\r\n            <Skill\r\n               Icon={AndroidIcon}\r\n               title=\"mobile app developer.\"\r\n               className=\"skill\"\r\n            />\r\n            <Skill Icon={WebIcon} title=\"ui/ux designer.\" className=\"skill\" />\r\n            <Skill\r\n               Icon={DesktopMacIcon}\r\n               title=\"full stack developer.\"\r\n               className=\"skill\"\r\n            />\r\n         </div>\r\n\r\n         <div className=\"projects\">\r\n            <div className=\"languages\">\r\n               {languages.map((language) => (\r\n                  <img\r\n                     key={language.key}\r\n                     src={language.url}\r\n                     alt={language.name}\r\n                  />\r\n               ))}\r\n            </div>\r\n            <Element name={'projects'}>\r\n               <div className=\"projects-list-container section\">\r\n                  <div className=\"header\">- Projects</div>\r\n                  <div className=\"title\">selected projects.</div>\r\n                  <div className=\"body\">{projectBody}</div>\r\n                  <div className=\"button\">\r\n                     <a\r\n                        href=\"https://github.com/adnanhakim\"\r\n                        title=\"Explore more projects on GitHub\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        explore more.\r\n                     </a>\r\n                  </div>\r\n                  <div className=\"projects-list\">\r\n                     {projects.map((project) => (\r\n                        <Project\r\n                           key={project.key}\r\n                           title={project.title}\r\n                           language={project.language}\r\n                           image={project.url}\r\n                           details={project.details}\r\n                           link={project.link}\r\n                           css={project.css}\r\n                        />\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            </Element>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Footer.css';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { Element } from 'react-scroll';\r\nimport { db } from '../firebase';\r\n\r\nfunction Footer({ resume }) {\r\n   const [achievements, setAchievements] = useState([]);\r\n\r\n   useEffect(() => {\r\n      async function fetchAchievements() {\r\n         const snapshot = await db.collection('achievements').get();\r\n\r\n         if (snapshot.empty) {\r\n            console.log('No achievements');\r\n         } else {\r\n            let achievements = [];\r\n\r\n            // Store in array\r\n            snapshot.forEach((doc) => {\r\n               const data = doc.data();\r\n               if (data.hide == null) {\r\n                  achievements.push({\r\n                     key: doc.id,\r\n                     name: data.name,\r\n                     order: data.order,\r\n                     link: data.link,\r\n                  });\r\n               }\r\n            });\r\n\r\n            // Sort by order\r\n            achievements.sort((a, b) => a.order - b.order);\r\n            setAchievements(achievements);\r\n         }\r\n      }\r\n\r\n      fetchAchievements();\r\n   }, []);\r\n\r\n   return (\r\n      <Element name=\"contact\">\r\n         <div className=\"footer-container section\">\r\n            <div className=\"footer\">\r\n               <div className=\"footer-top\">\r\n                  <div className=\"footer-left\">\r\n                     <div className=\"title\">\r\n                        got a project? <br />\r\n                        let's talk.\r\n                     </div>\r\n                     <div className=\"button\">\r\n                        <a href=\"mailto:adnanhakim007@gmail.com\">\r\n                           send an email.\r\n                        </a>\r\n                        <span>&nbsp; or &nbsp;</span>\r\n                        <a\r\n                           href={resume}\r\n                           rel=\"noopener noreferrer\"\r\n                           target=\"_blank\">\r\n                           check out my resume.\r\n                        </a>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"footer-right\">\r\n                     <div className=\"header\">- achievements</div>\r\n                     <div className=\"title\">some of my achievements.</div>\r\n                     <div className=\"achievements-container\">\r\n                        {achievements.map((achievement) => (\r\n                           <div key={achievement.key} className=\"achievement\">\r\n                              <div className=\"achievement-name\">\r\n                                 {achievement.name}\r\n                              </div>\r\n                              <a\r\n                                 href={achievement.link}\r\n                                 title=\"Check it out\"\r\n                                 target=\"_blank\"\r\n                                 rel=\"noopener noreferrer\">\r\n                                 <ArrowRightAltIcon className=\"button\" />\r\n                              </a>\r\n                           </div>\r\n                        ))}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className=\"footer-bottom\">\r\n                  <div className=\"footer-message\">\r\n                     Thanks for scrolling,\r\n                     <span className=\"light-text\"> that's all folks.</span>\r\n                  </div>\r\n                  <div className=\"footer-links\">\r\n                     <a\r\n                        href=\"https://www.instagram.com/ad.nxn/\"\r\n                        title=\"Follow me on Instagram\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <InstagramIcon className=\"footer-link\" />\r\n                     </a>\r\n                     <a\r\n                        href=\"https://github.com/adnanhakim\"\r\n                        title=\"See my projects on GitHub\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <GitHubIcon className=\"footer-link\" />\r\n                     </a>\r\n                     <a\r\n                        href=\"https://www.linkedin.com/in/adnanhakim/\"\r\n                        title=\"Follow me on LinkedIn\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <LinkedInIcon className=\"footer-link\" />\r\n                     </a>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </Element>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Contact from './components/Contact';\nimport Projects from './components/Projects';\nimport Footer from './components/Footer';\nimport aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { db } from './firebase';\n\nfunction App() {\n   const [info, setInfo] = useState({});\n\n   useEffect(() => {\n      async function fetchInformation() {\n         const doc = await db\n            .collection('information')\n            .doc('information')\n            .get();\n\n         if (doc.empty) {\n            console.log('No information');\n         } else {\n            const data = doc.data();\n            setInfo({\n               key: data.id,\n               homeTitle: data.homeTitle,\n               homeBody: data.homeBody,\n               image: data.image,\n               quote: data.quote,\n               projectBody: data.projectBody,\n               resume: data.resume,\n            });\n         }\n      }\n\n      fetchInformation();\n\n      // AOS\n      aos.init({\n         offset: 400,\n         duration: 1000,\n      });\n   }, []);\n\n   return (\n      <div className=\"App\">\n         <Navbar />\n         <Home\n            homeTitle={info.homeTitle}\n            homeBody={info.homeBody}\n            image={info.image}\n         />\n         <Contact quote={info.quote} />\n         <Projects projectBody={info.projectBody} />\n         <Footer resume={info.resume} />\n      </div>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}